# Ingress for Tetris Application using AWS Load Balancer Controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tetris-ingress
  namespace: tetris
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: tetris-alb

    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'

    # SSL/TLS Configuration (optional - uncomment if you have a certificate)
     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:980921730778:certificate/4d4100d8-be09-4aa8-8c93-a603297901af
     alb.ingress.kubernetes.io/ssl-redirect: '443'
     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'

    # Security groups (optional - will use default if not specified)
    # alb.ingress.kubernetes.io/security-groups: sg-xxxxxxxxx

    # Subnets (optional - will auto-discover public subnets if not specified)
    # alb.ingress.kubernetes.io/subnets: subnet-xxxxxxxxx,subnet-yyyyyyyyy

    # Additional tags for the ALB
    alb.ingress.kubernetes.io/tags: Environment=production,Application=tetris,ManagedBy=kubernetes

spec:
  rules:
  - host: tetris.example.com  # Replace with your actual domain or remove for any host
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tetris-service
            port:
              number: 80
  # Alternative rule without host specification (accepts any host)
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tetris-service
            port:
              number: 80
